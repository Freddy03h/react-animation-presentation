const willEnter = () => ({
  opacity: 0,
  scale: 0.9,
})

const willLeave = () => ({
  opacity: spring(0, springConfig),
  scale: spring(0.9, springConfig),
})

getStyles = () => {
  if(!this.state.isOpen) {
    return []
  }

  return [{
    style:  {
      opacity: spring(1, springConfig),
      scale: spring(1, springConfig),
    },
    key: 'dropdown-content',
  }]
}

//

<TransitionMotion
  styles={ this.getStyles() }
  willEnter={ willEnter }
  willLeave={ willLeave }
>
  { (interpolatedStyles) =>
      <div>
        { interpolatedStyles.map(({style, key}) =>
          <div
            className="DropDown7__Content"
            key={key}
            style={{
              opacity: style.opacity,
              transform: `scale(${style.scale})`,
            }}
          >
            {this.props.children}
          </div>
        )}
      </div>
  }
</TransitionMotion>